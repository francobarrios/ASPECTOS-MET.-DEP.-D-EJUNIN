install.packages ("stars")
install.packages ("geojsonio")
install.packages ("plainview")
install.packages ("rgdal")
install.packages ("rgal")
install.packages ("googledrive")
install.packages("mapedit")

arch <- "C:/DATA R/"
setwd(arch)


library(tidyverse)
library(sf)
library(sp)
library(raster)
library(ggplot2)
library(mapview)
library(mapedit)
library(lubridate)

library(rgee)
ee_install()
ee_Initialize()


ee_Initialize("franco.barrios",drive = TRUE)
#cargar shape provincias
prov <- st_read("Provincias.shp")
prov %>% filter(PRONOM98 %in% c("JUNIN"))

##dem
demperu<-raster("C:/DATA R/demperu.tiff")
plot(demperu)

#filtrar junin
junin <- prov %>% 
  filter(PROCOD98 == 1205)
#observar junin 
mapview(junin)
mapview(demperu)
library(plainview)
library(rgdal)
mapview(list(demperu, junin))


#mask raster -> as(simple feature, "Spatial)
sp_junin <- as(junin, "Spatial")

#junin_mask<- mask(demperu, sp_junin)        
#plot(junin_mask, 
#    main = "Dem para junin")                

##crop (corte)
junin_c<- crop(demperu, sp_junin)        
plot(junin_c)
junin_dem <- mask(junin_c, sp_junin)
plot(junin_dem)
##altitud media junin
altitud_media <- raster::extract(junin_dem, 
                                 sp_junin, 
                                 fun = mean)

install.packages("dplyr")
library(dplyr)
install.packages ("mapedit" , dependencies = TRUE)
library(mapedit)
install.packages("htmltools")
library(mapview)

##area relativa a junin
area <- mapview(junin_dem) %>% editMap()
area_sf <- area$all
plot(area_sf)

mapview(list(junin_dem, area_sf))

##sf -> ee
area_ee <- sf_as_ee(area_sf)
area_ee
library(rgee)
reticulate::py_install("earthengine-api")
ee_Initialize()
##extrayendo datos con rgee
##precipitaciones
ee_pp <- ee$ImageCollection("ECMWF/ERA5/MONTHLY")$
  filterDate("2018-01-01", "2019-01-01")$
  first()
pp_stack <- ee_as_raster(imag  = ee_pp,
                         region = area_ee$geometry())
pp_area <- pp_stack[[5]]
plot(pp_area)
#no corre el list , mejor correrlo uno por uno
mapview(list(pp_area, junin_dem))
mapview(pp_area)
mapview(junin_dem)
##surface pressure (Pa)
presion_area <- pp_stack[[6]]
plot(presion_area)

##puntos
puntos <- mapview(junin_dem) %>% 
  editMap()
puntos_sf <- puntos$all
puntos_sf
plot(junin_dem,
     main = "junin")
plot(puntos_sf, add = T)
#agregando columna de pp 
puntos_sf$pp <- raster::extract(pp_area, puntos_sf)
puntos_sf$Altitud <- raster::extract(junin_dem, puntos_sf)
puntos_sf$Presión <- raster::extract(presion_area, puntos_sf)
puntos_sf
##Relacionando elementos climáticos 
comparar <- puntos_sf %>%
  as_tibble() %>% 
  dplyr::select(pp, Altitud, Presión)

comparar

#plot altitud vs surface pressure
plot(comparar$Altitud, comparar$Presión,
     main = "Altitude vs Surface Pressure",
     ylab = "Surface Pressure(Pa)",
     xlab = " Altitude (m)")
## pp instantánea
pp_hour <- ee$ImageCollection("JAXA/GPM_L3/GSMaP/v6/operational")$
  filterDate("2018-08-06", "2018-08-07")$
  first()
pp2_stack <- ee_as_raster(imag  = ee_pp,
                          region = area_ee$geometry())
pp_area_hour <- pp2_stack[[1]]
plot(pp_area_hour)
mapview(list(pp_area_hour, junin_dem))
mapview(pp_area_hour)
##Albedo instantáneo
albedo <- ee$ImageCollection("NASA/GLDAS/V021/NOAH/G025/T3H")$
  filterDate("2018-08-06", "2018-08-07")$
  first()
albedo_stack <- ee_as_raster(imag  = albedo,
                             region = area_ee$geometry())
albedo_area <- albedo_stack[[1]]
plot(albedo_area)
mapview(list(albedo_area, junin_dem))
mapview(albedo_area)
puntos_sf$Albedo <- raster::extract(albedo_area, puntos_sf)

comparar <- puntos_sf %>%
  as_tibble() %>% 
  dplyr::select(pp, Altitud, Presión, Albedo)

puntos_sf
comparar

##Extraer data de Google earth engine

terraclimate <- ee$ImageCollection("IDAHO_EPSCOR/TERRACLIMATE")$
  filterDate("2010-01-01","2017-12-31")$
  map(function(x) x$reproject("EPSG:4326")$select("pr"))

library(rgee)
#extraer datos de pp 
x = junin %>% sf::st_set_crs(4326)
sfsf::st_set_crs(4326)
ppt <- ee_extract(terraclimate, x,
                  fun = ee$Reducer$mean())
head(t(ppt))

ppt1 <- ppt[5:length(ppt)]
library(tidyverse)
## otro formato 
ppt_2 <- pivot_longer(ppt1, everything(), 
                      names_to = "month",
                      values_to = "pr")

##crear una columna de fechas
Fecha <- seq(as.Date("2010-01-01"),
             by = "month",
             length.out = 96)
ppt_2$fechas <- Fecha

##plot
ggplot(ppt_2, aes(fechas, pr))+
  geom_line(col = "blue")+
  ggtitle("Precipitación de junin")+
  xlab("Fecha")+
  ylab("Precipitación (mm)")
